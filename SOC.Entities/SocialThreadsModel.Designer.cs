//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SocialThreadsModel", "GraphicVector", "Graphic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Graphic), "Vector", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Vector))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "VectorColor", "Vector", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Vector), "Color", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Color))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "DesignGraphicDesign", "Design", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Design), "GraphicDesign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.GraphicDesign))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "GraphicDesignGraphic", "GraphicDesign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.GraphicDesign), "Graphic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Graphic))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "GraphicKeywords", "Graphic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Graphic), "Keywords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Keywords))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "ItemWithSizeSize", "ItemWithSize", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.SelectedItem), "Size", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Size))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "ItemWithSizeItem", "ItemWithSize", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.SelectedItem), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Item))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "DesignItemWithSize", "Design", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Design), "ItemWithSize", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.SelectedItem))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "ItemAvailableSizes", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Item), "AvailableSizes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.AvailableSize))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "AvailableSizeSize", "AvailableSize", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.AvailableSize), "Size", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Size))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "ItemAvailableColor", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Item), "AvailableColor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.AvailableColor))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "AvailableColorColor", "AvailableColor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.AvailableColor), "Color", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Color))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "ItemManufacturer", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Item), "Manufacturer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Manufacturer))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "CategoryItem", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Category), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Item))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "GraphicDesignPrintLocation", "GraphicDesign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.GraphicDesign), "PrintLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.PrintLocation))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "OrderDesign", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Order), "Design", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Design))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "CompanyOrder", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Company), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Order))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "PersonOrder", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Person), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Order))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "AddressTypeAddress", "AddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.AddressType), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Address))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "PersonAddress", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Person), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Address))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "CompanyAddress", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.Company), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Address))]
[assembly: EdmRelationshipAttribute("SocialThreadsModel", "OrderStatusOrder", "OrderStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SOC.Entities.OrderStatus), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SOC.Entities.Order))]

#endregion

namespace SOC.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SocialThreadsModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SocialThreadsModelContainer object using the connection string found in the 'SocialThreadsModelContainer' section of the application configuration file.
        /// </summary>
        public SocialThreadsModelContainer() : base("name=SocialThreadsModelContainer", "SocialThreadsModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SocialThreadsModelContainer object.
        /// </summary>
        public SocialThreadsModelContainer(string connectionString) : base(connectionString, "SocialThreadsModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SocialThreadsModelContainer object.
        /// </summary>
        public SocialThreadsModelContainer(EntityConnection connection) : base(connection, "SocialThreadsModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Graphic> Graphics
        {
            get
            {
                if ((_Graphics == null))
                {
                    _Graphics = base.CreateObjectSet<Graphic>("Graphics");
                }
                return _Graphics;
            }
        }
        private ObjectSet<Graphic> _Graphics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Design> Designs
        {
            get
            {
                if ((_Designs == null))
                {
                    _Designs = base.CreateObjectSet<Design>("Designs");
                }
                return _Designs;
            }
        }
        private ObjectSet<Design> _Designs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Size> Sizes
        {
            get
            {
                if ((_Sizes == null))
                {
                    _Sizes = base.CreateObjectSet<Size>("Sizes");
                }
                return _Sizes;
            }
        }
        private ObjectSet<Size> _Sizes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Color> Colors
        {
            get
            {
                if ((_Colors == null))
                {
                    _Colors = base.CreateObjectSet<Color>("Colors");
                }
                return _Colors;
            }
        }
        private ObjectSet<Color> _Colors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GraphicDesign> GraphicDesigns
        {
            get
            {
                if ((_GraphicDesigns == null))
                {
                    _GraphicDesigns = base.CreateObjectSet<GraphicDesign>("GraphicDesigns");
                }
                return _GraphicDesigns;
            }
        }
        private ObjectSet<GraphicDesign> _GraphicDesigns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vector> Vectors
        {
            get
            {
                if ((_Vectors == null))
                {
                    _Vectors = base.CreateObjectSet<Vector>("Vectors");
                }
                return _Vectors;
            }
        }
        private ObjectSet<Vector> _Vectors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Keywords> Keywords
        {
            get
            {
                if ((_Keywords == null))
                {
                    _Keywords = base.CreateObjectSet<Keywords>("Keywords");
                }
                return _Keywords;
            }
        }
        private ObjectSet<Keywords> _Keywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SelectedItem> SelectedItems
        {
            get
            {
                if ((_SelectedItems == null))
                {
                    _SelectedItems = base.CreateObjectSet<SelectedItem>("SelectedItems");
                }
                return _SelectedItems;
            }
        }
        private ObjectSet<SelectedItem> _SelectedItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AvailableSize> AvailableSizes1
        {
            get
            {
                if ((_AvailableSizes1 == null))
                {
                    _AvailableSizes1 = base.CreateObjectSet<AvailableSize>("AvailableSizes1");
                }
                return _AvailableSizes1;
            }
        }
        private ObjectSet<AvailableSize> _AvailableSizes1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AvailableColor> AvailableColors
        {
            get
            {
                if ((_AvailableColors == null))
                {
                    _AvailableColors = base.CreateObjectSet<AvailableColor>("AvailableColors");
                }
                return _AvailableColors;
            }
        }
        private ObjectSet<AvailableColor> _AvailableColors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Manufacturer> Manufacturers
        {
            get
            {
                if ((_Manufacturers == null))
                {
                    _Manufacturers = base.CreateObjectSet<Manufacturer>("Manufacturers");
                }
                return _Manufacturers;
            }
        }
        private ObjectSet<Manufacturer> _Manufacturers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrintLocation> PrintLocations
        {
            get
            {
                if ((_PrintLocations == null))
                {
                    _PrintLocations = base.CreateObjectSet<PrintLocation>("PrintLocations");
                }
                return _PrintLocations;
            }
        }
        private ObjectSet<PrintLocation> _PrintLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddressType> AddressTypes
        {
            get
            {
                if ((_AddressTypes == null))
                {
                    _AddressTypes = base.CreateObjectSet<AddressType>("AddressTypes");
                }
                return _AddressTypes;
            }
        }
        private ObjectSet<AddressType> _AddressTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderStatus> OrderStatus
        {
            get
            {
                if ((_OrderStatus == null))
                {
                    _OrderStatus = base.CreateObjectSet<OrderStatus>("OrderStatus");
                }
                return _OrderStatus;
            }
        }
        private ObjectSet<OrderStatus> _OrderStatus;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Graphics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGraphics(Graphic graphic)
        {
            base.AddObject("Graphics", graphic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Designs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDesigns(Design design)
        {
            base.AddObject("Designs", design);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sizes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSizes(Size size)
        {
            base.AddObject("Sizes", size);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Colors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToColors(Color color)
        {
            base.AddObject("Colors", color);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GraphicDesigns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGraphicDesigns(GraphicDesign graphicDesign)
        {
            base.AddObject("GraphicDesigns", graphicDesign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vectors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVectors(Vector vector)
        {
            base.AddObject("Vectors", vector);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Keywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKeywords(Keywords keywords)
        {
            base.AddObject("Keywords", keywords);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SelectedItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSelectedItems(SelectedItem selectedItem)
        {
            base.AddObject("SelectedItems", selectedItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AvailableSizes1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAvailableSizes1(AvailableSize availableSize)
        {
            base.AddObject("AvailableSizes1", availableSize);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AvailableColors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAvailableColors(AvailableColor availableColor)
        {
            base.AddObject("AvailableColors", availableColor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Manufacturers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManufacturers(Manufacturer manufacturer)
        {
            base.AddObject("Manufacturers", manufacturer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrintLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrintLocations(PrintLocation printLocation)
        {
            base.AddObject("PrintLocations", printLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddressTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddressTypes(AddressType addressType)
        {
            base.AddObject("AddressTypes", addressType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderStatus(OrderStatus orderStatus)
        {
            base.AddObject("OrderStatus", orderStatus);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="address1">Initial value of the Address1 property.</param>
        /// <param name="address2">Initial value of the Address2 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zip">Initial value of the Zip property.</param>
        /// <param name="isActive">Initial value of the isActive property.</param>
        /// <param name="isPrimary">Initial value of the isPrimary property.</param>
        public static Address CreateAddress(global::System.Int32 id, global::System.String address1, global::System.String address2, global::System.String city, global::System.String state, global::System.String zip, global::System.String isActive, global::System.String isPrimary)
        {
            Address address = new Address();
            address.Id = id;
            address.Address1 = address1;
            address.Address2 = address2;
            address.City = city;
            address.State = state;
            address.Zip = zip;
            address.isActive = isActive;
            address.isPrimary = isPrimary;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private global::System.String _isActive;
        partial void OnisActiveChanging(global::System.String value);
        partial void OnisActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String isPrimary
        {
            get
            {
                return _isPrimary;
            }
            set
            {
                OnisPrimaryChanging(value);
                ReportPropertyChanging("isPrimary");
                _isPrimary = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("isPrimary");
                OnisPrimaryChanged();
            }
        }
        private global::System.String _isPrimary;
        partial void OnisPrimaryChanging(global::System.String value);
        partial void OnisPrimaryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "AddressTypeAddress", "AddressType")]
        public AddressType AddressType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("SocialThreadsModel.AddressTypeAddress", "AddressType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("SocialThreadsModel.AddressTypeAddress", "AddressType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AddressType> AddressTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("SocialThreadsModel.AddressTypeAddress", "AddressType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AddressType>("SocialThreadsModel.AddressTypeAddress", "AddressType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "PersonAddress", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SocialThreadsModel.PersonAddress", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SocialThreadsModel.PersonAddress", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SocialThreadsModel.PersonAddress", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SocialThreadsModel.PersonAddress", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "CompanyAddress", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SocialThreadsModel.CompanyAddress", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SocialThreadsModel.CompanyAddress", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SocialThreadsModel.CompanyAddress", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("SocialThreadsModel.CompanyAddress", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="AddressType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AddressType CreateAddressType(global::System.Int32 id, global::System.String name)
        {
            AddressType addressType = new AddressType();
            addressType.Id = id;
            addressType.Name = name;
            return addressType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "AddressTypeAddress", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("SocialThreadsModel.AddressTypeAddress", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("SocialThreadsModel.AddressTypeAddress", "Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="AvailableColor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AvailableColor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AvailableColor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static AvailableColor CreateAvailableColor(global::System.Int32 id)
        {
            AvailableColor availableColor = new AvailableColor();
            availableColor.Id = id;
            return availableColor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "ItemAvailableColor", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SocialThreadsModel.ItemAvailableColor", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SocialThreadsModel.ItemAvailableColor", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SocialThreadsModel.ItemAvailableColor", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("SocialThreadsModel.ItemAvailableColor", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "AvailableColorColor", "Color")]
        public EntityCollection<Color> Colors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Color>("SocialThreadsModel.AvailableColorColor", "Color");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Color>("SocialThreadsModel.AvailableColorColor", "Color", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="AvailableSize")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AvailableSize : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AvailableSize object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static AvailableSize CreateAvailableSize(global::System.Int32 id)
        {
            AvailableSize availableSize = new AvailableSize();
            availableSize.Id = id;
            return availableSize;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "ItemAvailableSizes", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SocialThreadsModel.ItemAvailableSizes", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SocialThreadsModel.ItemAvailableSizes", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SocialThreadsModel.ItemAvailableSizes", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("SocialThreadsModel.ItemAvailableSizes", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "AvailableSizeSize", "Size")]
        public EntityCollection<Size> Size
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Size>("SocialThreadsModel.AvailableSizeSize", "Size");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Size>("SocialThreadsModel.AvailableSizeSize", "Size", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "CategoryItem", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("SocialThreadsModel.CategoryItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("SocialThreadsModel.CategoryItem", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Color")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Color : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Color object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Color CreateColor(global::System.Int32 id)
        {
            Color color = new Color();
            color.Id = id;
            return color;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "VectorColor", "Vector")]
        public Vector Vector
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vector>("SocialThreadsModel.VectorColor", "Vector").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vector>("SocialThreadsModel.VectorColor", "Vector").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vector> VectorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vector>("SocialThreadsModel.VectorColor", "Vector");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vector>("SocialThreadsModel.VectorColor", "Vector", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "AvailableColorColor", "AvailableColor")]
        public AvailableColor AvailableColor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableColor>("SocialThreadsModel.AvailableColorColor", "AvailableColor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableColor>("SocialThreadsModel.AvailableColorColor", "AvailableColor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AvailableColor> AvailableColorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableColor>("SocialThreadsModel.AvailableColorColor", "AvailableColor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AvailableColor>("SocialThreadsModel.AvailableColorColor", "AvailableColor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Company CreateCompany(global::System.Int32 id, global::System.String name)
        {
            Company company = new Company();
            company.Id = id;
            company.Name = name;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "CompanyOrder", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("SocialThreadsModel.CompanyOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("SocialThreadsModel.CompanyOrder", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "CompanyAddress", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("SocialThreadsModel.CompanyAddress", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("SocialThreadsModel.CompanyAddress", "Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Design")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Design : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Design object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Design CreateDesign(global::System.Int32 id)
        {
            Design design = new Design();
            design.Id = id;
            return design;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "DesignGraphicDesign", "GraphicDesign")]
        public EntityCollection<GraphicDesign> GraphicDesigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GraphicDesign>("SocialThreadsModel.DesignGraphicDesign", "GraphicDesign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GraphicDesign>("SocialThreadsModel.DesignGraphicDesign", "GraphicDesign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "DesignItemWithSize", "ItemWithSize")]
        public EntityCollection<SelectedItem> ItemWithSizes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SelectedItem>("SocialThreadsModel.DesignItemWithSize", "ItemWithSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SelectedItem>("SocialThreadsModel.DesignItemWithSize", "ItemWithSize", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "OrderDesign", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("SocialThreadsModel.OrderDesign", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("SocialThreadsModel.OrderDesign", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("SocialThreadsModel.OrderDesign", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("SocialThreadsModel.OrderDesign", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Graphic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Graphic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Graphic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Graphic CreateGraphic(global::System.Int32 id, global::System.String name)
        {
            Graphic graphic = new Graphic();
            graphic.Id = id;
            graphic.Name = name;
            return graphic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "GraphicVector", "Vector")]
        public EntityCollection<Vector> Vectors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vector>("SocialThreadsModel.GraphicVector", "Vector");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vector>("SocialThreadsModel.GraphicVector", "Vector", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "GraphicDesignGraphic", "GraphicDesign")]
        public GraphicDesign GraphicDesign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GraphicDesign>("SocialThreadsModel.GraphicDesignGraphic", "GraphicDesign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GraphicDesign>("SocialThreadsModel.GraphicDesignGraphic", "GraphicDesign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GraphicDesign> GraphicDesignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GraphicDesign>("SocialThreadsModel.GraphicDesignGraphic", "GraphicDesign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GraphicDesign>("SocialThreadsModel.GraphicDesignGraphic", "GraphicDesign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "GraphicKeywords", "Keywords")]
        public EntityCollection<Keywords> Keywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Keywords>("SocialThreadsModel.GraphicKeywords", "Keywords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Keywords>("SocialThreadsModel.GraphicKeywords", "Keywords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="GraphicDesign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GraphicDesign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GraphicDesign object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="xoffset">Initial value of the Xoffset property.</param>
        /// <param name="yoffset">Initial value of the Yoffset property.</param>
        /// <param name="xscale">Initial value of the Xscale property.</param>
        /// <param name="yscale">Initial value of the Yscale property.</param>
        /// <param name="rotation">Initial value of the Rotation property.</param>
        public static GraphicDesign CreateGraphicDesign(global::System.Int32 id, global::System.String xoffset, global::System.String yoffset, global::System.String xscale, global::System.String yscale, global::System.String rotation)
        {
            GraphicDesign graphicDesign = new GraphicDesign();
            graphicDesign.Id = id;
            graphicDesign.Xoffset = xoffset;
            graphicDesign.Yoffset = yoffset;
            graphicDesign.Xscale = xscale;
            graphicDesign.Yscale = yscale;
            graphicDesign.Rotation = rotation;
            return graphicDesign;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Xoffset
        {
            get
            {
                return _Xoffset;
            }
            set
            {
                OnXoffsetChanging(value);
                ReportPropertyChanging("Xoffset");
                _Xoffset = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Xoffset");
                OnXoffsetChanged();
            }
        }
        private global::System.String _Xoffset;
        partial void OnXoffsetChanging(global::System.String value);
        partial void OnXoffsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Yoffset
        {
            get
            {
                return _Yoffset;
            }
            set
            {
                OnYoffsetChanging(value);
                ReportPropertyChanging("Yoffset");
                _Yoffset = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Yoffset");
                OnYoffsetChanged();
            }
        }
        private global::System.String _Yoffset;
        partial void OnYoffsetChanging(global::System.String value);
        partial void OnYoffsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Xscale
        {
            get
            {
                return _Xscale;
            }
            set
            {
                OnXscaleChanging(value);
                ReportPropertyChanging("Xscale");
                _Xscale = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Xscale");
                OnXscaleChanged();
            }
        }
        private global::System.String _Xscale;
        partial void OnXscaleChanging(global::System.String value);
        partial void OnXscaleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Yscale
        {
            get
            {
                return _Yscale;
            }
            set
            {
                OnYscaleChanging(value);
                ReportPropertyChanging("Yscale");
                _Yscale = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Yscale");
                OnYscaleChanged();
            }
        }
        private global::System.String _Yscale;
        partial void OnYscaleChanging(global::System.String value);
        partial void OnYscaleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rotation
        {
            get
            {
                return _Rotation;
            }
            set
            {
                OnRotationChanging(value);
                ReportPropertyChanging("Rotation");
                _Rotation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Rotation");
                OnRotationChanged();
            }
        }
        private global::System.String _Rotation;
        partial void OnRotationChanging(global::System.String value);
        partial void OnRotationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "DesignGraphicDesign", "Design")]
        public Design Design
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Design>("SocialThreadsModel.DesignGraphicDesign", "Design").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Design>("SocialThreadsModel.DesignGraphicDesign", "Design").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Design> DesignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Design>("SocialThreadsModel.DesignGraphicDesign", "Design");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Design>("SocialThreadsModel.DesignGraphicDesign", "Design", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "GraphicDesignGraphic", "Graphic")]
        public EntityCollection<Graphic> Graphics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Graphic>("SocialThreadsModel.GraphicDesignGraphic", "Graphic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Graphic>("SocialThreadsModel.GraphicDesignGraphic", "Graphic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "GraphicDesignPrintLocation", "PrintLocation")]
        public EntityCollection<PrintLocation> PrintLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrintLocation>("SocialThreadsModel.GraphicDesignPrintLocation", "PrintLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrintLocation>("SocialThreadsModel.GraphicDesignPrintLocation", "PrintLocation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="shortDescription">Initial value of the ShortDescription property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="productNumber">Initial value of the ProductNumber property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String shortDescription, global::System.String description, global::System.String name, global::System.String productNumber)
        {
            Item item = new Item();
            item.Id = id;
            item.ShortDescription = shortDescription;
            item.Description = description;
            item.Name = name;
            item.ProductNumber = productNumber;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortDescription
        {
            get
            {
                return _ShortDescription;
            }
            set
            {
                OnShortDescriptionChanging(value);
                ReportPropertyChanging("ShortDescription");
                _ShortDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortDescription");
                OnShortDescriptionChanged();
            }
        }
        private global::System.String _ShortDescription;
        partial void OnShortDescriptionChanging(global::System.String value);
        partial void OnShortDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductNumber
        {
            get
            {
                return _ProductNumber;
            }
            set
            {
                OnProductNumberChanging(value);
                ReportPropertyChanging("ProductNumber");
                _ProductNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductNumber");
                OnProductNumberChanged();
            }
        }
        private global::System.String _ProductNumber;
        partial void OnProductNumberChanging(global::System.String value);
        partial void OnProductNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "ItemWithSizeItem", "ItemWithSize")]
        public SelectedItem SelectedItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SelectedItem>("SocialThreadsModel.ItemWithSizeItem", "ItemWithSize").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SelectedItem>("SocialThreadsModel.ItemWithSizeItem", "ItemWithSize").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SelectedItem> SelectedItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SelectedItem>("SocialThreadsModel.ItemWithSizeItem", "ItemWithSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SelectedItem>("SocialThreadsModel.ItemWithSizeItem", "ItemWithSize", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "ItemAvailableSizes", "AvailableSizes")]
        public EntityCollection<AvailableSize> AvailableSizes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AvailableSize>("SocialThreadsModel.ItemAvailableSizes", "AvailableSizes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AvailableSize>("SocialThreadsModel.ItemAvailableSizes", "AvailableSizes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "ItemAvailableColor", "AvailableColor")]
        public EntityCollection<AvailableColor> AvailableColors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AvailableColor>("SocialThreadsModel.ItemAvailableColor", "AvailableColor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AvailableColor>("SocialThreadsModel.ItemAvailableColor", "AvailableColor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "ItemManufacturer", "Manufacturer")]
        public EntityCollection<Manufacturer> Manufacturer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Manufacturer>("SocialThreadsModel.ItemManufacturer", "Manufacturer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Manufacturer>("SocialThreadsModel.ItemManufacturer", "Manufacturer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "CategoryItem", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SocialThreadsModel.CategoryItem", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SocialThreadsModel.CategoryItem", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("SocialThreadsModel.CategoryItem", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("SocialThreadsModel.CategoryItem", "Category", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Keywords")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Keywords : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Keywords object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Keywords CreateKeywords(global::System.Int32 id, global::System.String value)
        {
            Keywords keywords = new Keywords();
            keywords.Id = id;
            keywords.Value = value;
            return keywords;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "GraphicKeywords", "Graphic")]
        public Graphic Graphic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Graphic>("SocialThreadsModel.GraphicKeywords", "Graphic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Graphic>("SocialThreadsModel.GraphicKeywords", "Graphic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Graphic> GraphicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Graphic>("SocialThreadsModel.GraphicKeywords", "Graphic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Graphic>("SocialThreadsModel.GraphicKeywords", "Graphic", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Manufacturer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manufacturer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manufacturer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Manufacturer CreateManufacturer(global::System.Int32 id, global::System.String name)
        {
            Manufacturer manufacturer = new Manufacturer();
            manufacturer.Id = id;
            manufacturer.Name = name;
            return manufacturer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "ItemManufacturer", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SocialThreadsModel.ItemManufacturer", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SocialThreadsModel.ItemManufacturer", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("SocialThreadsModel.ItemManufacturer", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("SocialThreadsModel.ItemManufacturer", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Order CreateOrder(global::System.Int32 id)
        {
            Order order = new Order();
            order.Id = id;
            return order;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "OrderDesign", "Design")]
        public EntityCollection<Design> Designs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Design>("SocialThreadsModel.OrderDesign", "Design");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Design>("SocialThreadsModel.OrderDesign", "Design", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "CompanyOrder", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SocialThreadsModel.CompanyOrder", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SocialThreadsModel.CompanyOrder", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SocialThreadsModel.CompanyOrder", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("SocialThreadsModel.CompanyOrder", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "PersonOrder", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SocialThreadsModel.PersonOrder", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SocialThreadsModel.PersonOrder", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SocialThreadsModel.PersonOrder", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SocialThreadsModel.PersonOrder", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "OrderStatusOrder", "OrderStatus")]
        public OrderStatus OrderStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("SocialThreadsModel.OrderStatusOrder", "OrderStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("SocialThreadsModel.OrderStatusOrder", "OrderStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderStatus> OrderStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderStatus>("SocialThreadsModel.OrderStatusOrder", "OrderStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderStatus>("SocialThreadsModel.OrderStatusOrder", "OrderStatus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="OrderStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static OrderStatus CreateOrderStatus(global::System.Int32 id, global::System.String name)
        {
            OrderStatus orderStatus = new OrderStatus();
            orderStatus.Id = id;
            orderStatus.Name = name;
            return orderStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "OrderStatusOrder", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("SocialThreadsModel.OrderStatusOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("SocialThreadsModel.OrderStatusOrder", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Person CreatePerson(global::System.Int32 id, global::System.String firstName, global::System.String lastName)
        {
            Person person = new Person();
            person.Id = id;
            person.FirstName = firstName;
            person.LastName = lastName;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "PersonOrder", "Order")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("SocialThreadsModel.PersonOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("SocialThreadsModel.PersonOrder", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "PersonAddress", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("SocialThreadsModel.PersonAddress", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("SocialThreadsModel.PersonAddress", "Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="PrintLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrintLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrintLocation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static PrintLocation CreatePrintLocation(global::System.Int32 id, global::System.String name)
        {
            PrintLocation printLocation = new PrintLocation();
            printLocation.Id = id;
            printLocation.Name = name;
            return printLocation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "GraphicDesignPrintLocation", "GraphicDesign")]
        public GraphicDesign GraphicDesign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GraphicDesign>("SocialThreadsModel.GraphicDesignPrintLocation", "GraphicDesign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GraphicDesign>("SocialThreadsModel.GraphicDesignPrintLocation", "GraphicDesign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GraphicDesign> GraphicDesignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GraphicDesign>("SocialThreadsModel.GraphicDesignPrintLocation", "GraphicDesign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GraphicDesign>("SocialThreadsModel.GraphicDesignPrintLocation", "GraphicDesign", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="SelectedItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SelectedItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SelectedItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static SelectedItem CreateSelectedItem(global::System.Int32 id, global::System.String price)
        {
            SelectedItem selectedItem = new SelectedItem();
            selectedItem.Id = id;
            selectedItem.Price = price;
            return selectedItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.String _Price;
        partial void OnPriceChanging(global::System.String value);
        partial void OnPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "ItemWithSizeSize", "Size")]
        public EntityCollection<Size> Size
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Size>("SocialThreadsModel.ItemWithSizeSize", "Size");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Size>("SocialThreadsModel.ItemWithSizeSize", "Size", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "ItemWithSizeItem", "Item")]
        public EntityCollection<Item> Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("SocialThreadsModel.ItemWithSizeItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("SocialThreadsModel.ItemWithSizeItem", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "DesignItemWithSize", "Design")]
        public Design Design
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Design>("SocialThreadsModel.DesignItemWithSize", "Design").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Design>("SocialThreadsModel.DesignItemWithSize", "Design").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Design> DesignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Design>("SocialThreadsModel.DesignItemWithSize", "Design");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Design>("SocialThreadsModel.DesignItemWithSize", "Design", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Size")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Size : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Size object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Size CreateSize(global::System.Int32 id)
        {
            Size size = new Size();
            size.Id = id;
            return size;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "ItemWithSizeSize", "ItemWithSize")]
        public SelectedItem SelectedItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SelectedItem>("SocialThreadsModel.ItemWithSizeSize", "ItemWithSize").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SelectedItem>("SocialThreadsModel.ItemWithSizeSize", "ItemWithSize").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SelectedItem> SelectedItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SelectedItem>("SocialThreadsModel.ItemWithSizeSize", "ItemWithSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SelectedItem>("SocialThreadsModel.ItemWithSizeSize", "ItemWithSize", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "AvailableSizeSize", "AvailableSize")]
        public AvailableSize AvailableSizes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableSize>("SocialThreadsModel.AvailableSizeSize", "AvailableSize").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableSize>("SocialThreadsModel.AvailableSizeSize", "AvailableSize").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AvailableSize> AvailableSizesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AvailableSize>("SocialThreadsModel.AvailableSizeSize", "AvailableSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AvailableSize>("SocialThreadsModel.AvailableSizeSize", "AvailableSize", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SocialThreadsModel", Name="Vector")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vector : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vector object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="xoffset">Initial value of the Xoffset property.</param>
        /// <param name="yoffset">Initial value of the Yoffset property.</param>
        public static Vector CreateVector(global::System.Int32 id, global::System.String xoffset, global::System.String yoffset)
        {
            Vector vector = new Vector();
            vector.Id = id;
            vector.Xoffset = xoffset;
            vector.Yoffset = yoffset;
            return vector;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Xoffset
        {
            get
            {
                return _Xoffset;
            }
            set
            {
                OnXoffsetChanging(value);
                ReportPropertyChanging("Xoffset");
                _Xoffset = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Xoffset");
                OnXoffsetChanged();
            }
        }
        private global::System.String _Xoffset;
        partial void OnXoffsetChanging(global::System.String value);
        partial void OnXoffsetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Yoffset
        {
            get
            {
                return _Yoffset;
            }
            set
            {
                OnYoffsetChanging(value);
                ReportPropertyChanging("Yoffset");
                _Yoffset = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Yoffset");
                OnYoffsetChanged();
            }
        }
        private global::System.String _Yoffset;
        partial void OnYoffsetChanging(global::System.String value);
        partial void OnYoffsetChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "GraphicVector", "Graphic")]
        public Graphic Graphic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Graphic>("SocialThreadsModel.GraphicVector", "Graphic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Graphic>("SocialThreadsModel.GraphicVector", "Graphic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Graphic> GraphicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Graphic>("SocialThreadsModel.GraphicVector", "Graphic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Graphic>("SocialThreadsModel.GraphicVector", "Graphic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SocialThreadsModel", "VectorColor", "Color")]
        public EntityCollection<Color> Colors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Color>("SocialThreadsModel.VectorColor", "Color");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Color>("SocialThreadsModel.VectorColor", "Color", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
